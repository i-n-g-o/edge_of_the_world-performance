#N canvas 268 150 1029 639 10;
#X obj 34 88 loadbang;
#X text 625 357 it will be sent to bela_i2c_in;
#X text 626 326 When the result of the read;
#X text 625 347 we requested is ready \,;
#X msg 629 36 debug 1;
#X msg 699 36 debug 0;
#X text 626 21 Enable/disable console logging;
#X msg 628 85 open 2 24;
#X msg 629 124 address 25;
#X msg 629 163 write 11 58 19;
#X text 627 186 Request to read 13 bytes;
#X msg 629 200 read 13;
#X text 625 110 ... the address can be changed any time with:;
#X text 625 70 The bus is unique for the whole patch ...;
#X text 627 149 Write some bytes;
#X text 627 243 (the last number is the number of bytes to read);
#X msg 629 257 writeread 1 2 3 13;
#X text 625 60 Open device on i2c bus 2 \, address 24;
#X text 626 336 (or writeread) operation;
#X text 627 222 Write some bytes and request to read back 13 bytes
;
#X text 627 233 all in the same I2C transaction("repeated start").
;
#X text 627 5 Reference for;
#X obj 722 4 send bela_i2c;
#X text 36 40 How to deal with I2C from Pd on Bela;
#X obj 72 376 send bela_i2c @hv_param;
#X obj 628 373 receive bela_i2c_in;
#X msg 78 157 debug 1;
#X obj 43 261 L3GD20;
#N canvas 362 186 1144 813 9DOF 0;
#X obj 429 221 delay 500;
#X msg 160 321 writeread 29 2;
#X msg 237 253 write 22 25;
#X msg 324 280 write 21 9;
#X text 396 281 Set the sample rate to 100 hz;
#X text 317 248 //Set the gyroscope scale for the outputs to +/-2000
degrees per second;
#X obj 307 177 delay 500;
#X obj 368 198 delay 500;
#X text 259 321 X;
#X msg 228 352 writeread 31 2;
#X msg 268 372 writeread 33 2;
#X obj 404 319 metro 2000;
#X msg 89 144 open 1 104;
#X msg 161 216 writeread 0 1;
#X obj 237 151 delay 500;
#X connect 0 0 11 0;
#X connect 6 0 2 0;
#X connect 6 0 7 0;
#X connect 7 0 3 0;
#X connect 7 0 0 0;
#X connect 11 0 9 0;
#X connect 14 0 13 0;
#X connect 14 0 6 0;
#X restore 269 318 pd 9DOF;
#N canvas 122 358 1288 740 LSM303_Accel 0;
#X msg 293 223 writeread 15 1;
#X text 407 222 get id (expect 51 (0x33));
#X msg 318 277 write 32 87;
#X text 398 279 Enable the accelerometer (100Hz);
#X msg 334 402 writeread 40 6;
#X text 432 402 get raw data;
#X text 895 117 from i2c;
#X obj 816 95 receive bela_i2c_in;
#X obj 793 170 spigot;
#X obj 792 222 unpack 0 0 0 0 0 0;
#X obj 798 287 << 8;
#X obj 778 327 +;
#X obj 859 285 << 8;
#X obj 839 325 +;
#X obj 928 289 << 8;
#X obj 908 329 +;
#X obj 173 61 inlet;
#X obj 196 435 outlet;
#X obj 170 95 t b b;
#X obj 293 202 delay 500;
#X obj 317 255 delay 500;
#X obj 335 313 delay 500;
#X obj 335 335 t b b;
#X msg 422 339 1;
#X msg 231 126 open 1 25;
#X text 303 127 LSM303 Accel (0x32 >> 1) (50 >> 1 = 25);
#X obj 364 364 metro 100;
#X obj 825 425 pack 0 0 0;
#X obj 765 567 print ACCEL;
#X connect 0 0 17 0;
#X connect 2 0 17 0;
#X connect 4 0 17 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 11 0;
#X connect 9 1 10 0;
#X connect 9 2 13 0;
#X connect 9 3 12 0;
#X connect 9 4 15 0;
#X connect 9 5 14 0;
#X connect 10 0 11 1;
#X connect 11 0 27 0;
#X connect 12 0 13 1;
#X connect 13 0 27 1;
#X connect 14 0 15 1;
#X connect 15 0 27 2;
#X connect 16 0 18 0;
#X connect 18 0 19 0;
#X connect 18 1 24 0;
#X connect 19 0 0 0;
#X connect 19 0 20 0;
#X connect 20 0 2 0;
#X connect 20 0 21 0;
#X connect 21 0 22 0;
#X connect 22 0 26 0;
#X connect 22 1 23 0;
#X connect 23 0 8 1;
#X connect 24 0 17 0;
#X connect 26 0 4 0;
#X connect 27 0 28 0;
#X restore 167 262 pd LSM303_Accel;
#X obj 34 109 t b b;
#X connect 0 0 30 0;
#X connect 26 0 24 0;
#X connect 27 0 24 0;
#X connect 29 0 24 0;
#X connect 30 0 27 0;
